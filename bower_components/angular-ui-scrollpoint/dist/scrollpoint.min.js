/*!
 * angular-ui-scrollpoint
 * https://github.com/angular-ui/ui-scrollpoint
 * Version: 2.1.0 - 2016-01-11T01:55:45.786Z
 * License: MIT
 */
!function(){"use strict";angular.module("ui.scrollpoint",[]).directive("uiScrollpoint",["$window","$timeout",function(t,e){function i(){if(angular.isDefined(t.pageYOffset))return t.pageYOffset;var e=document.compatMode&&"BackCompat"!==document.compatMode?document.documentElement:document.body;return e.scrollTop}function s(){return t.document.body.scrollHeight-t.innerHeight}function n(e){return e?t.document.body.clientHeight:t.innerHeight}return{require:["uiScrollpoint","^?uiScrollpointTarget"],controller:function(){function e(t){var i={shift:0,absolute:!1,percent:!1};if(t&&angular.isString(t))if(i.percent="%"==t.charAt(t.length-1),i.percent&&(t=t.substr(0,t.length-1)),"-"===t.charAt(0))i.absolute=i.percent,i.shift=-parseFloat(t.substr(1));else if("+"===t.charAt(0))i.absolute=i.percent,i.shift=parseFloat(t.substr(1));else{var s=parseFloat(t);!isNaN(s)&&isFinite(s)&&(i.absolute=!0,i.shift=s)}else if(angular.isNumber(t))return e(t.toString());return i}this.$element=void 0,this.$target=void 0,this.hasTarget=!1,this.edges={top:{top:!0}},this.hitEdge=void 0,this.default_edge={absolute:!1,percent:!1,shift:0},this.posCache={},this.enabled=!0,this.scrollpointClass="ui-scrollpoint",this.actions=void 0,this.addEdge=function(t,i){if(angular.isString(t))if(angular.isUndefined(i)&&(i=!0),"view"==t)this.addEdge("top","bottom"),this.addEdge("bottom","top");else{var s,n;if(angular.isObject(i))for(s in i)i[s]=i[s]===!0?!0:e(i[s]);else"top"==i||"bottom"==i?(s=i,n=e(),i={},i[s]=n):i===!0?(i={},i[t]=!0):(n=e(i),i={},i[t]=n);this.edges[t]=i}},this.addAction=function(t){t&&angular.isFunction(t)&&(angular.isUndefined(this.actions)?this.actions=[t]:-1==this.actions.indexOf(t)&&this.actions.push(t))},this.setScrollpoint=function(t){this.default_edge=e(t)},this.setClass=function(t){t||(t="ui-scrollpoint"),this.scrollpointClass=t},this.setEdges=function(t){if(angular.isString(t))this.edges={},this.addEdge(t);else if(angular.isArray(t)){this.edges={};for(var e in t)this.addEdge(t[e])}else if(angular.isObject(t)){this.edges={};for(var i in t)this.addEdge(i,t[i])}else this.edges={},this.addEdge("top")},this.setElement=function(t){this.$element=t},this.setTarget=function(e){e?(this.$target=e,this.hasTarget=!0):(this.$target=angular.element(t),this.hasTarget=!1)},this.getEdge=function(t,e){if(t&&e){if(this.edges[t]&&this.edges[t][e]&&this.edges[t][e]!==!0)return this.edges[t][e]}else if(t&&!e){if(this.edges[t])return this.edges[t];return}return this.default_edge},this.checkOffset=function(t,e,i){var s;i||(i=this.default_edge);var n="bottom"==t,o="top"==e,r="bottom"==e,l=this.getScrollOffset();n&&(l+=this.getTargetHeight());var a;return i.absolute?(a=i.percent?i.shift/100*this.getTargetScrollHeight():i.shift,n&&(a=this.getTargetContentHeight()-a,this.hasTarget&&(a+=this.getTargetHeight()))):(o?a=this.getElementTop():r&&(a=this.getElementBottom()),a+=i.shift),s=l-a,n&&(s*=-1),s},this.scrollEdgeHit=function(){var t,e,i,s,n,o,r;i=0,s={};for(o in this.edges)for(r in this.edges[o]){n=this.getEdge(o,r);var l=this.checkOffset(o,r,n);n.absolute?(angular.isUndefined(s)&&(s={}),angular.isUndefined(s[o])&&(s[o]={}),s[o][r]=l,i++):(angular.isUndefined(t)||l>t)&&(t=l,e={scroll:o,element:r})}if(i&&!e){var a=!0;t=void 0;for(o in s)for(r in s[o])i>1&&s[o][r]<0?a=!1:(angular.isUndefined(t)||s[o][r]>t)&&(t=s[o][r],e={scroll:o,element:r});a||(e=void 0,t=void 0)}return this.hitEdge=t>=0?e:void 0,t},this.getScrollOffset=function(){return this.hasTarget?this.$target[0].scrollTop:i()},this.getTargetHeight=function(){return this.hasTarget?this.$target[0].offsetHeight:n()},this.getTargetContentHeight=function(){return this.hasTarget?this.$target[0].scrollHeight-this.$target[0].clientHeight:n(!0)},this.getTargetScrollHeight=function(){return this.hasTarget?this.$target[0].scrollHeight-this.$target[0].clientHeight:s()},this.getElementTop=function(t){if(!t&&angular.isDefined(this.posCache.top))return this.posCache.top;var e=this.$element[0].getBoundingClientRect(),i=e.top+this.getScrollOffset();if(this.hasTarget){var s=this.$target[0].getBoundingClientRect();i-=s.top}return i},this.getElementBottom=function(t){return this.getElementTop(t)+this.$element[0].offsetHeight},this.cachePosition=function(){this.posCache.top=this.getElementTop(!0)}},link:function(t,i,s,n){function o(){if(c&&a.enabled){var t=a.scrollEdgeHit(),e=a.hitEdge,s=!1;if(t>=0?g||(i.hasClass(a.scrollpointClass)||i.addClass(a.scrollpointClass),s=!0,g=!0):((g||angular.isUndefined(g))&&(i.hasClass(a.scrollpointClass)&&i.removeClass(a.scrollpointClass),s=!0,g=!1),a.cachePosition()),s&&a.actions)for(var n in a.actions)a.actions[n](t,i,e?e.scroll:void 0,e?e.element:void 0)}}function r(){e(function(){i.removeClass(a.scrollpointClass),g=void 0,a.hitEdge=void 0,a.cachePosition(),o()})}function l(){a.$target.on("scroll",o),t.$on("$destroy",function(){a.$target.off("scroll",o)})}var a=n[0],h=n[1],c=!1,g=!1,u=!1;a.setElement(i),a.setTarget(h?h.$element:null),s.$observe("uiScrollpoint",function(t){a.setScrollpoint(t),r()}),s.$observe("uiScrollpointEnabled",function(e){e=t.$eval(e),e!=a.enabled&&r(),a.enabled=e}),s.$observe("uiScrollpointAbsolute",function(e){e=t.$eval(e),e!=u&&(a.$target&&a.$target.off("scroll",o),a.setTarget(!e&&h?h.$element:null),l(),r()),u=e}),s.$observe("uiScrollpointAction",function(e){var i=t.$eval(e);i&&angular.isFunction(i)&&a.addAction(i)}),s.$observe("uiScrollpointClass",function(t){i.removeClass(a.scrollpointClass),a.setClass(t),r()}),s.$observe("uiScrollpointEdge",function(e){if(e){var i=["top","bottom","view"];-1==i.indexOf(e)&&(e=t.$eval(e)),a.setEdges(e),r()}}),l(),i.ready(function(){c=!0,o()}),t.$on("scrollpointShouldReset",r)}}}]).directive("uiScrollpointTarget",[function(){return{controller:["$element",function(t){this.$element=t}]}}])}();